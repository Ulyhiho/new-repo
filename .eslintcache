[{"C:\\Users\\Mark Ulysses\\OneDrive\\Desktop\\01-starting-setup\\src\\index.js":"1","C:\\Users\\Mark Ulysses\\OneDrive\\Desktop\\01-starting-setup\\src\\App.js":"2","C:\\Users\\Mark Ulysses\\OneDrive\\Desktop\\01-starting-setup\\src\\components\\addContacts.js":"3","C:\\Users\\Mark Ulysses\\OneDrive\\Desktop\\01-starting-setup\\src\\components\\ViewContacts.js":"4","C:\\Users\\Mark Ulysses\\OneDrive\\Desktop\\01-starting-setup\\src\\home.js":"5","C:\\Users\\Mark Ulysses\\OneDrive\\Desktop\\new-react\\src\\index.js":"6","C:\\Users\\Mark Ulysses\\OneDrive\\Desktop\\new-react\\src\\App.js":"7","C:\\Users\\Mark Ulysses\\OneDrive\\Desktop\\new-react\\src\\components\\ViewContact.js":"8","C:\\Users\\Mark Ulysses\\OneDrive\\Desktop\\new-react\\src\\components\\UpdateContact.js":"9","C:\\Users\\Mark Ulysses\\OneDrive\\Desktop\\new-react\\src\\components\\AddContact.js":"10","C:\\Users\\Mark Ulysses\\OneDrive\\Desktop\\new-react\\src\\components\\DeleteContact.js":"11"},{"size":205,"mtime":1634203607007,"results":"12","hashOfConfig":"13"},{"size":125,"mtime":1634473837262,"results":"14","hashOfConfig":"13"},{"size":3105,"mtime":1634519399312,"results":"15","hashOfConfig":"13"},{"size":1776,"mtime":1634520082713,"results":"16","hashOfConfig":"13"},{"size":2802,"mtime":1634520081015,"results":"17","hashOfConfig":"13"},{"size":205,"mtime":1634203607007,"results":"18","hashOfConfig":"19"},{"size":697,"mtime":1634523527851,"results":"20","hashOfConfig":"19"},{"size":3130,"mtime":1634520851483,"results":"21","hashOfConfig":"19"},{"size":9477,"mtime":1634524979260,"results":"22","hashOfConfig":"19"},{"size":10136,"mtime":1634525158547,"results":"23","hashOfConfig":"19"},{"size":3679,"mtime":1634653432229,"results":"24","hashOfConfig":"19"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"1h0ksqc",{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1tew6by",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Mark Ulysses\\OneDrive\\Desktop\\01-starting-setup\\src\\index.js",[],["52","53"],"C:\\Users\\Mark Ulysses\\OneDrive\\Desktop\\01-starting-setup\\src\\App.js",[],"C:\\Users\\Mark Ulysses\\OneDrive\\Desktop\\01-starting-setup\\src\\components\\addContacts.js",[],"C:\\Users\\Mark Ulysses\\OneDrive\\Desktop\\01-starting-setup\\src\\components\\ViewContacts.js",[],"C:\\Users\\Mark Ulysses\\OneDrive\\Desktop\\01-starting-setup\\src\\home.js",[],"C:\\Users\\Mark Ulysses\\OneDrive\\Desktop\\new-react\\src\\index.js",[],["54","55"],"C:\\Users\\Mark Ulysses\\OneDrive\\Desktop\\new-react\\src\\App.js",[],"C:\\Users\\Mark Ulysses\\OneDrive\\Desktop\\new-react\\src\\components\\ViewContact.js",["56","57","58"],"import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Background from \"../components/images/back.jpg\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nconst ViewContainer = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: url(${Background}) no-repeat center;\r\n  -webkit-background-size: cover;\r\n  -moz-background-size: cover;\r\n  -o-background-size: cover;\r\n  background-size: cover;\r\n  position: relative;\r\n`;\r\n\r\nconst ViewContent = styled.div`\r\n  width: 30%;\r\n  height: fit-content;\r\n  padding: 20px 0px;\r\n  background: rgba(0, 0, 0, 0.522);\r\n  display: block;\r\n  z-index: 2;\r\n  border-radius: 10px;\r\n\r\n  label {\r\n    color: white;\r\n  }\r\n\r\n  h3 {\r\n    color: white;\r\n    text-align: center;\r\n    margin-top: 10px;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  a {\r\n    color: white;\r\n    text-decoration: none;\r\n  }\r\n\r\n  .center {\r\n    width: fit-content;\r\n    margin: auto;\r\n  }\r\n\r\n  .ContentControl {\r\n    width: fit-content;\r\n    height: fit-content;\r\n    display: flex;\r\n  }\r\n\r\n  .OptionControl {\r\n    display: flex;\r\n    width: 100%;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: auto;\r\n  }\r\n\r\n  .LinkControl {\r\n    border: 1px solid red;\r\n    text-align: center;\r\n    margin: 20px;\r\n    width: 15%;\r\n    padding: 5px 0px;\r\n    border-radius: 5px;\r\n    background: red;\r\n  }\r\n`;\r\n\r\nexport function View(props) {\r\n  const [viewDelete, setViewDelete] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\r\n      \"http://localhost:3001/viewContact/\" + props.match.params.id\r\n    ).then((response) => {\r\n      setViewDelete(response.data);\r\n    });\r\n  });\r\n\r\n  return (\r\n    <ViewContainer>\r\n      <ViewContent>\r\n        <h3>Are you sure you want to delete this data?</h3>\r\n\r\n        {viewDelete.map((vals, key) => {\r\n          return (\r\n            <div className=\"center\">\r\n              <div className=\"ContentControl\">\r\n                <label>ID:&nbsp;&nbsp;{vals.id}</label>\r\n              </div>\r\n\r\n              <div className=\"ContentControl\">\r\n                <label>Full Name:&nbsp;&nbsp;{vals.fullName}</label>\r\n              </div>\r\n\r\n              <div className=\"ContentControl\">\r\n                <label>Email:&nbsp;&nbsp;{vals.email}</label>\r\n              </div>\r\n\r\n              <div className=\"ContentControl\">\r\n                <label>Contact:&nbsp;&nbsp;{vals.contactNumber}</label>\r\n              </div>\r\n\r\n              <div className=\"ContentControl\">\r\n                <label>Location:&nbsp;&nbsp;{vals.location}</label>\r\n              </div>\r\n\r\n              <div className=\"ContentControl\">\r\n                <label>Registered Date:&nbsp;&nbsp;{vals.registeredDate}</label>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        <div className=\"OptionControl\">\r\n          <div className=\"LinkControl\">\r\n            <Link to=\"/\">Back</Link>\r\n          </div>\r\n        </div>\r\n      </ViewContent>\r\n    </ViewContainer>\r\n  );\r\n}\r\n","C:\\Users\\Mark Ulysses\\OneDrive\\Desktop\\new-react\\src\\components\\UpdateContact.js",["59","60","61","62"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Background from \"../components/images/back.jpg\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as Yup from \"yup\";\r\nimport Axios from \"axios\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\n// add contact container\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: url(${Background}) no-repeat center;\r\n  -webkit-background-size: cover;\r\n  -moz-background-size: cover;\r\n  -o-background-size: cover;\r\n  background-size: cover;\r\n  position: relative;\r\n\r\n  .separator {\r\n    width: 50%;\r\n    display: flex;\r\n  }\r\n`;\r\n\r\n// form design codes\r\nconst FormContainer = styled.div`\r\n  width: 60%;\r\n  height: fit-content;\r\n  padding: 20px 0px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 10px;\r\n  border: 1px solid dodgerblue;\r\n  z-index: 5;\r\n  background: rgba(0, 0, 0, 0.61);\r\n  box-shadow: 0 0 5px dodgerblue;\r\n\r\n  h3 {\r\n    color: white;\r\n  }\r\n\r\n  .InputControl {\r\n    width: 100%;\r\n    margin: auto;\r\n    display: block;\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  label {\r\n    color: white;\r\n  }\r\n\r\n  .InputControl input {\r\n    width: 100%;\r\n    margin-top: 3px;\r\n    padding: 3px 0px;\r\n  }\r\n\r\n  .InputControl select {\r\n    width: 100%;\r\n    padding: 3px 0px;\r\n  }\r\n\r\n  .InputControl p {\r\n    color: yellow;\r\n    text-align: center;\r\n    margin-top: 5px;\r\n    font-size: 12px;\r\n  }\r\n\r\n  .button {\r\n    padding: 3px 10px;\r\n  }\r\n\r\n  .AddButton {\r\n    width: fit-content;\r\n    margin: auto;\r\n  }\r\n\r\n  .control {\r\n    width: fit-content;\r\n    margin: auto;\r\n  }\r\n\r\n  .control button {\r\n    padding: 4px 4px;\r\n    border-radius: 5px;\r\n    background: blue;\r\n    color: white;\r\n  }\r\n\r\n  a {\r\n    padding: 5px 10px;\r\n    margin-top: 20px;\r\n    color: white;\r\n    background: red;\r\n    border-radius: 5px;\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nconst TableContainer = styled.div`\r\n  width: 60%;\r\n  height: fit-content;\r\n  z-index: 5;\r\n  margin: auto;\r\n  border: 1px solid;\r\n  margin-top: 145px;\r\n\r\n  th {\r\n    color: white;\r\n    background: dodgerblue;\r\n    padding: 5px;\r\n  }\r\n\r\n  td {\r\n    text-align: center;\r\n    padding: 5px 3px;\r\n    color: white;\r\n  }\r\n\r\n  td .blue {\r\n    padding: 5px 5px;\r\n    border: none;\r\n    color: white;\r\n    background: blue;\r\n    cursor: pointer;\r\n  }\r\n\r\n  td .green {\r\n    padding: 5px 5px;\r\n    border: none;\r\n    color: white;\r\n    background: green;\r\n    margin: 0px 8px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  td .red {\r\n    padding: 5px 5px;\r\n    border: none;\r\n    color: white;\r\n    background: red;\r\n    cursor: pointer;\r\n  }\r\n\r\n  nav {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 20px;\r\n  }\r\n\r\n  nav ul {\r\n    display: flex;\r\n    list-style: none;\r\n    color: white;\r\n  }\r\n\r\n  nav ul li {\r\n    padding: 2px 5px;\r\n    color: black;\r\n    background: white;\r\n    border: 1px solid dodgerblue;\r\n    cursor: pointer;\r\n  }\r\n  nav ul li.active-page {\r\n    background: dodgerblue;\r\n    color: white;\r\n  }\r\n\r\n  table {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst DataToUpdate = styled.div`\r\n  width: 40%;\r\n  height: fit-content;\r\n  padding: 20px 0px;\r\n  display: flex;\r\n  border-radius: 10px;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: rgba(0, 0, 0, 0.61);\r\n  box-shadow: 0 0 5px dodgerblue;\r\n\r\n  h3 {\r\n    text-align: center;\r\n    color: white;\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  .align {\r\n    display: block;\r\n    width: fit-content;\r\n    margin: auto;\r\n    margin-left: 20px;\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst schema = Yup.object().shape({\r\n  fullName: Yup.string(\"please input a valid name\").required(\r\n    \"First Name is required\"\r\n  ),\r\n  email: Yup.string()\r\n    .email(\"please input a valid email\")\r\n    .required(\"Email is required\"),\r\n  contactNumber: Yup.number()\r\n    .positive()\r\n    .integer()\r\n    .required(\"Contact number is required\"),\r\n  location: Yup.string().required(\"Location is required\"),\r\n  registeredDate: Yup.date().default(function () {\r\n    return new Date();\r\n  }),\r\n});\r\n\r\nexport function Update(props) {\r\n  const [viewUpdateContact, setViewUpdateContact] = useState([]);\r\n\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [contactNumber, setContactNumber] = useState(0);\r\n  const [location, setLocation] = useState(\"\");\r\n  const [registeredDate, setRegisteredDate] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    Axios.get(\r\n      \"http://localhost:3001/viewContact/\" + props.match.params.id\r\n    ).then((response) => {\r\n      setViewUpdateContact(response.data);\r\n    });\r\n  });\r\n\r\n  const updateContact = (id) => {\r\n    Axios.put(\"http://localhost:3001/updateContact\", {\r\n      id: id,\r\n      fullName: fullName,\r\n      email: email,\r\n      contactNumber: contactNumber,\r\n      location: location,\r\n      registeredDate: registeredDate,\r\n    });\r\n  };\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const submitForm = (data) => {};\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"separator\">\r\n        <FormContainer>\r\n          <h3>Update Contact</h3>\r\n\r\n          <form onSubmit={handleSubmit(submitForm)}>\r\n            {viewUpdateContact.map((vals, key) => {\r\n              return (\r\n                <div>\r\n                  <div className=\"InputControl\">\r\n                    <label>Full Name:</label>\r\n                    <input\r\n                      name=\"fullName\"\r\n                      placeholder=\"Last Name, First Name, Middle Initial\"\r\n                      {...register(\"fullName\")}\r\n                      onChange={(event) => {\r\n                        setFullName(event.target.value);\r\n                      }}\r\n                    />\r\n                    <p>{errors.fullName?.message}</p>\r\n                  </div>\r\n\r\n                  <div className=\"InputControl\">\r\n                    <label>Email:</label>\r\n                    <input\r\n                      name=\"email\"\r\n                      placeholder=\"Email\"\r\n                      {...register(\"email\")}\r\n                      onChange={(event) => {\r\n                        setEmail(event.target.value);\r\n                      }}\r\n                    />\r\n                    <p>{errors.email?.message}</p>\r\n                  </div>\r\n\r\n                  <div className=\"InputControl\">\r\n                    <label>Contact Number:</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"contactNumber\"\r\n                      placeholder=\"09232321321\"\r\n                      {...register(\"contactNumber\")}\r\n                      onChange={(event) => {\r\n                        setContactNumber(event.target.value);\r\n                      }}\r\n                    />\r\n                    <p>{errors.contactNumber?.message}</p>\r\n                  </div>\r\n\r\n                  <div className=\"InputControl\">\r\n                    <label>Location:</label>\r\n                    <select\r\n                      name=\"location\"\r\n                      {...register(\"location\")}\r\n                      onChange={(event) => {\r\n                        setLocation(event.target.value);\r\n                      }}\r\n                    >\r\n                      <option value=\"\" disabled selected hidden>\r\n                        Select Location\r\n                      </option>\r\n                      <option>Manila</option>\r\n                      <option>Cebu</option>\r\n                    </select>\r\n                    <p>{errors.location?.message}</p>\r\n                  </div>\r\n\r\n                  <div className=\"InputControl\">\r\n                    <label>Full Name:</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      name=\"registeredDate\"\r\n                      {...register(\"registeredDate\")}\r\n                      onChange={(event) => {\r\n                        setRegisteredDate(event.target.value);\r\n                      }}\r\n                    />\r\n                    <p>{errors.registeredDate?.message}</p>\r\n                  </div>\r\n                  <div className=\"control\">\r\n                    <button\r\n                      onClick={() => {\r\n                        updateContact(vals.id);\r\n                      }}\r\n                    >\r\n                      Update\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </form>\r\n\r\n          <Link to=\"/\">Back</Link>\r\n        </FormContainer>\r\n\r\n        <DataToUpdate>\r\n          <h3>Data to update</h3>\r\n\r\n          {viewUpdateContact.map((vals, key) => {\r\n            return (\r\n              <div class=\"align\">\r\n                <label>Full Name: {vals.fullName}</label>\r\n                <br />\r\n                <label>Email: {vals.email}</label>\r\n                <br />\r\n                <label>Contact Number{vals.contactNumber}</label>\r\n                <br />\r\n                <label>Location: {vals.location}</label>\r\n                <br />\r\n                <label>Registered Date: {vals.registeredDate}</label>\r\n              </div>\r\n            );\r\n          })}\r\n        </DataToUpdate>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\Mark Ulysses\\OneDrive\\Desktop\\new-react\\src\\components\\AddContact.js",["63","64","65"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as Yup from \"yup\";\r\nimport Background from \"../components/images/back.jpg\";\r\nimport Axios from \"axios\";\r\nimport _ from \"lodash\";\r\n\r\n// add contact container\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: url(${Background}) no-repeat center;\r\n  -webkit-background-size: cover;\r\n  -moz-background-size: cover;\r\n  -o-background-size: cover;\r\n  background-size: cover;\r\n  position: relative;\r\n`;\r\n\r\n// form design codes\r\nconst FormContainer = styled.div`\r\n  width: 30%;\r\n  height: fit-content;\r\n  padding: 20px 0px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 10px;\r\n  border: 1px solid dodgerblue;\r\n  z-index: 5;\r\n  background: rgba(0, 0, 0, 0.61);\r\n  box-shadow: 0 0 5px dodgerblue;\r\n  margin: auto;\r\n\r\n  h3 {\r\n    color: white;\r\n  }\r\n\r\n  .InputControl {\r\n    width: 100%;\r\n    margin: auto;\r\n    display: block;\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  label {\r\n    color: white;\r\n  }\r\n\r\n  .InputControl input {\r\n    width: 100%;\r\n    margin-top: 3px;\r\n    padding: 3px 0px;\r\n  }\r\n\r\n  .InputControl select {\r\n    width: 100%;\r\n    padding: 3px 0px;\r\n  }\r\n\r\n  .InputControl p {\r\n    color: yellow;\r\n    text-align: center;\r\n    margin-top: 5px;\r\n    font-size: 12px;\r\n  }\r\n\r\n  .button {\r\n    padding: 3px 10px;\r\n  }\r\n\r\n  .AddButton {\r\n    width: fit-content;\r\n    margin: auto;\r\n  }\r\n`;\r\n\r\nconst TableContainer = styled.div`\r\n  width: 60%;\r\n  height: fit-content;\r\n  z-index: 5;\r\n  margin: auto;\r\n  border: 1px solid;\r\n  margin-top: 145px;\r\n  background: white;\r\n\r\n  th {\r\n    color: white;\r\n    background: dodgerblue;\r\n    padding: 5px;\r\n  }\r\n\r\n  td {\r\n    text-align: center;\r\n    padding: 5px 3px;\r\n    color: black;\r\n  }\r\n\r\n  td .blue {\r\n    padding: 5px 5px;\r\n    border: none;\r\n    color: white;\r\n    background: blue;\r\n    cursor: pointer;\r\n  }\r\n\r\n  td .green {\r\n    padding: 5px 5px;\r\n    border: none;\r\n    color: white;\r\n    background: green;\r\n    margin: 0px 8px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  td {\r\n    border: 1px solid gray;\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n\r\n  td .red {\r\n    padding: 5px 5px;\r\n    border: none;\r\n    color: white;\r\n    background: red;\r\n    cursor: pointer;\r\n  }\r\n\r\n  nav {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 20px;\r\n  }\r\n\r\n  nav ul {\r\n    display: flex;\r\n    list-style: none;\r\n    color: white;\r\n  }\r\n\r\n  nav ul li {\r\n    padding: 2px 5px;\r\n    color: black;\r\n    background: white;\r\n    border: 1px solid dodgerblue;\r\n    cursor: pointer;\r\n  }\r\n  nav ul li.active-page {\r\n    background: dodgerblue;\r\n    color: white;\r\n  }\r\n\r\n  table {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst NumericOnly =\r\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\nconst schema = Yup.object().shape({\r\n  fullName: Yup.string()\r\n    .required(\"Full Name field cannot be blank\")\r\n    .matches(/^[aA-zZ\\s]+$/, \"Full Name field accept characters values only\")\r\n    .max(30),\r\n  email: Yup.string()\r\n    .email(\"Email Address field should have email domain\")\r\n    .required(\"Email Address field cannot be blank\")\r\n    .max(45, \"Email Address field accept up to 45 in size only\"),\r\n  contactNumber: Yup.string()\r\n    .required(\"Contact Number field cannot be blank\")\r\n    .matches(NumericOnly, \"Contact Number field accept numeric values only\")\r\n    .max(11, \"Contact Number field accept up to 11 in size only\"),\r\n  location: Yup.string().required(\"Location field cannot be blank\"),\r\n  registeredDate: Yup.date().default(function () {\r\n    return new Date();\r\n  }),\r\n});\r\n\r\nexport function AddContact(props) {\r\n  const pageSize = 5;\r\n\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [contactNumber, setContactNumber] = useState(0);\r\n  const [location, setLocation] = useState(\"\");\r\n  const [registeredDate, setRegisteredDate] = useState(\"\");\r\n\r\n  const [contactList, setContactList] = useState([]);\r\n  const [paginatedList, setPaginatedList] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const AddContact = () => {\r\n    Axios.post(\"http://localhost:3001/create\", {\r\n      fullName: fullName,\r\n      email: email,\r\n      contactNumber: contactNumber,\r\n      location: location,\r\n      registeredDate: registeredDate,\r\n    }).then(() => {\r\n      setContactList([\r\n        ...contactList,\r\n        {\r\n          fullName: fullName,\r\n          email: email,\r\n          contactNumber: contactNumber,\r\n          location: location,\r\n          registeredDate: registeredDate,\r\n        },\r\n      ]);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/contacts\").then((response) => {\r\n      setContactList(response.data);\r\n      setPaginatedList(_(response.data).slice(0).take(pageSize).value());\r\n    });\r\n  }, []);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const submitForm = (data) => {};\r\n\r\n  const pageCount = contactList ? Math.ceil(contactList.length / pageSize) : 0;\r\n\r\n  // if(pageCount === 0) return null;\r\n  const pages = _.range(1, pageCount + 1);\r\n\r\n  const pagination = (pageNo) => {\r\n    setCurrentPage(pageNo);\r\n    const startIndex = (pageNo - 1) * pageSize;\r\n    const paginatedList = _(contactList)\r\n      .slice(startIndex)\r\n      .take(pageSize)\r\n      .value();\r\n    setPaginatedList(paginatedList);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <FormContainer>\r\n        {/* header title */}\r\n        <h3>Add Contact</h3>\r\n\r\n        <form onSubmit={handleSubmit(submitForm)}>\r\n          <div className=\"InputControl\">\r\n            <label>Full Name:</label>\r\n            <input\r\n              name=\"fullName\"\r\n              placeholder=\"Last Name, First Name, Middle Initial\"\r\n              {...register(\"fullName\")}\r\n              onChange={(event) => {\r\n                setFullName(event.target.value);\r\n              }}\r\n            />\r\n            <p>{errors.fullName?.message}</p>\r\n          </div>\r\n\r\n          <div className=\"InputControl\">\r\n            <label>Email:</label>\r\n            <input\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              {...register(\"email\")}\r\n              onChange={(event) => {\r\n                setEmail(event.target.value);\r\n              }}\r\n            />\r\n            <p>{errors.email?.message}</p>\r\n          </div>\r\n\r\n          <div className=\"InputControl\">\r\n            <label>Contact Number:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"contactNumber\"\r\n              placeholder=\"09232321321\"\r\n              {...register(\"contactNumber\")}\r\n              onChange={(event) => {\r\n                setContactNumber(event.target.value);\r\n              }}\r\n            />\r\n            <p>{errors.contactNumber?.message}</p>\r\n          </div>\r\n\r\n          <div className=\"InputControl\">\r\n            <label>Location:</label>\r\n            <select\r\n              name=\"location\"\r\n              {...register(\"location\")}\r\n              onChange={(event) => {\r\n                setLocation(event.target.value);\r\n              }}\r\n            >\r\n              <option value=\"\" disabled selected hidden>\r\n                Select Location\r\n              </option>\r\n              <option>Manila</option>\r\n              <option>Cebu</option>\r\n            </select>\r\n            <p>{errors.location?.message}</p>\r\n          </div>\r\n\r\n          <div className=\"InputControl\">\r\n            <label>Full Name:</label>\r\n            <input\r\n              type=\"date\"\r\n              name=\"registeredDate\"\r\n              {...register(\"registeredDate\")}\r\n              onChange={(event) => {\r\n                setRegisteredDate(event.target.value);\r\n              }}\r\n            />\r\n            <p>{errors.registeredDate?.message}</p>\r\n          </div>\r\n\r\n          <div className=\"AddButton\">\r\n            <input className=\"button\" onClick={AddContact} type=\"submit\" />\r\n          </div>\r\n        </form>\r\n      </FormContainer>\r\n\r\n      {/* table list */}\r\n      <TableContainer>\r\n        <table>\r\n          <thead>\r\n            <th>ID</th>\r\n            <th>Full Name</th>\r\n            <th>Email</th>\r\n            <th>Contact Number</th>\r\n            <th>Location</th>\r\n            <th>Registered Date</th>\r\n            <th colSpan=\"3\">Action</th>\r\n          </thead>\r\n          <tbody>\r\n            {paginatedList.map((val, key) => {\r\n              return (\r\n                <tr key={val.id}>\r\n                  <td>{val.id}</td>\r\n                  <td>{val.fullName}</td>\r\n                  <td>{val.email}</td>\r\n                  <td>{val.contactNumber}</td>\r\n                  <td>{val.location}</td>\r\n                  <td>{val.registeredDate}</td>\r\n                  <td>\r\n                    <Link className=\"blue\" to={\"/View/\" + val.id}>\r\n                      View\r\n                    </Link>\r\n                  </td>\r\n                  <td>\r\n                    <Link className=\"green\" to={\"/Update/\" + val.id}>\r\n                      Update\r\n                    </Link>\r\n                  </td>\r\n                  <td>\r\n                    <Link className=\"red\" to={\"/Delete/\" + val.id}>\r\n                      Delete\r\n                    </Link>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n\r\n        <nav>\r\n          <ul className=\"\">\r\n            {pages.map((page) => (\r\n              <li\r\n                className={page === currentPage ? \"active-page\" : \"page-items\"}\r\n                onClick={() => pagination(page)}\r\n              >\r\n                {page}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </nav>\r\n      </TableContainer>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\Mark Ulysses\\OneDrive\\Desktop\\new-react\\src\\components\\DeleteContact.js",["66","67","68"],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"69","replacedBy":"73"},{"ruleId":"71","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":2,"column":27,"nodeType":"77","messageId":"78","endLine":2,"endColumn":33},{"ruleId":"75","severity":1,"message":"79","line":2,"column":35,"nodeType":"77","messageId":"78","endLine":2,"endColumn":41},{"ruleId":"75","severity":1,"message":"80","line":2,"column":43,"nodeType":"77","messageId":"78","endLine":2,"endColumn":48},{"ruleId":"75","severity":1,"message":"76","line":9,"column":27,"nodeType":"77","messageId":"78","endLine":9,"endColumn":33},{"ruleId":"75","severity":1,"message":"79","line":9,"column":35,"nodeType":"77","messageId":"78","endLine":9,"endColumn":41},{"ruleId":"75","severity":1,"message":"80","line":9,"column":43,"nodeType":"77","messageId":"78","endLine":9,"endColumn":48},{"ruleId":"75","severity":1,"message":"81","line":110,"column":7,"nodeType":"77","messageId":"78","endLine":110,"endColumn":21},{"ruleId":"75","severity":1,"message":"76","line":3,"column":27,"nodeType":"77","messageId":"78","endLine":3,"endColumn":33},{"ruleId":"75","severity":1,"message":"79","line":3,"column":35,"nodeType":"77","messageId":"78","endLine":3,"endColumn":41},{"ruleId":"75","severity":1,"message":"80","line":3,"column":43,"nodeType":"77","messageId":"78","endLine":3,"endColumn":48},{"ruleId":"75","severity":1,"message":"76","line":3,"column":27,"nodeType":"77","messageId":"78","endLine":3,"endColumn":33},{"ruleId":"75","severity":1,"message":"79","line":3,"column":35,"nodeType":"77","messageId":"78","endLine":3,"endColumn":41},{"ruleId":"75","severity":1,"message":"80","line":3,"column":43,"nodeType":"77","messageId":"78","endLine":3,"endColumn":48},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],["82"],["83"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'TableContainer' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]